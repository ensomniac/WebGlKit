#!/usr/bin/python
#
# 2019 Ensomniac Studios
# Author: Ryan Martin ryan@ensomniac.com

import os
import sys

# Usage:
# >> python setup.py

# This script will create an executable shell script in /usr/local/bin/ that links this
# module to a command line option 'webglkit'

PYTHON_EXECUTABLE = "ProcessBuild" # The path to the executable that will get ran
SYSTEM_COMMAND = "webglkit" # The name of the actual tool the user will run

class Setup:
    def __init__(self):

        self.package_root = os.path.join(os.path.dirname(os.path.realpath(__file__)), PYTHON_EXECUTABLE)
        self.python_exe = sys.executable
        self.cmd = " ".join([self.python_exe, "'" + self.package_root + "'"])
        self.local_bin = "/usr/local/bin/"
        self.local_executable = os.path.join(self.local_bin, SYSTEM_COMMAND)

        if not os.path.exists(self.local_bin):
            os.makedirs(self.local_bin)

        if os.path.exists(self.local_executable):
            os.remove(self.local_executable)

        file(self.local_executable, "w").write(self.content())

        os.system("chmod +x " + self.local_executable)

        if os.path.exists(self.local_executable):
            print "\nSuccessfully installed '" + SYSTEM_COMMAND + "'\n"
        else:
            print "\nERROR: There may have been a problem installing this system command\n"

    def content(self):
        lines = []
        lines.append("#!/bin/bash")
        lines.append("#")
        lines.append("# Automatically generated by " + os.path.join(os.getcwd(), __file__))
        lines.append("")
        lines.append(self.python_exe + " '" + self.package_root + "'")

        return "\n".join(lines)

if __name__ == "__main__":
    Setup()
